name: Build and Release
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release Tag"
        required: true
        default: "test"
      release_draft:
        description: "Release Draft"
        type: boolean
        required: true
        default: true
      prerelease:
        description: "PreRelease"
        type: boolean
        required: true
        default: true

jobs:
  upload-release:
    name: Upload Release 🎁
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download Zip File 📥
        uses: actions/download-artifact@v2
        with:
          name: uploads
          path: builds

      - name: Unzip Linux AppImage 📥
        run: |
          unzip -j builds/gah_linux_appimage.zip -d builds
          rm builds/gah_linux_appimage.zip
          mv "builds/gah-$(git rev-parse --short HEAD)-$(uname -m).AppImage" "builds/gah-$(uname -m).AppImage"

      - name: Create Release and Upload Assets 🎁
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          draft: ${{ github.event.inputs.release_draft == 'true' }}
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
          automatic_release_tag: ${{ github.event.inputs.release_tag }}
          files: |
            builds/*.zip
            builds/*.AppImage

  build-linux:
    name: Build Linux 🖥
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download and Unzip SQLite 📥
        run: |
          wget -O sqlite.zip https://www.sqlite.org/2022/sqlite-amalgamation-3380000.zip
          unzip -j sqlite.zip -d sqlite3

      - name: Add Qt 🧰
        uses: jurplel/install-qt-action@v2

      - name: Build 🛠
        env:
          CC: gcc-9
          CXX: g++-9
        run: |
          chmod +x build.sh
          ./build.sh
          chmod +x pack_appimage.sh
          ./pack_appimage.sh

      - name: Zipping 📦
        run: |
          zip -r gah_linux_appimage.zip *.AppImage*

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: |
            gah_linux_appimage.zip

  build-windows:
    name: Build Windows 🖥
    runs-on: windows-2019
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download and Unzip SQLite 📥
        run: |
          C:\msys64\usr\bin\wget.exe -O sqlite.zip https://www.sqlite.org/2022/sqlite-amalgamation-3380000.zip
          C:\msys64\usr\bin\unzip.exe -j sqlite.zip -d sqlite3
          C:\msys64\usr\bin\wget.exe -O sqlite_windows.zip https://www.sqlite.org/2022/sqlite-dll-win64-x64-3380000.zip
          C:\msys64\usr\bin\unzip.exe -j sqlite_windows.zip -d sqlite3

      - name: Add MSVC 🧰
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build 🛠
        env:
          WITHCLANG: "ok"
        run: .\build.bat

      - name: Zipping 📦
        run: |
          cd build\bin\Release
          C:\msys64\usr\bin\zip.exe -r ..\..\..\gah_windows.zip .

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: gah_windows.zip

      - name: Build For Git Bash 🛠
        env:
          WITHCLANG: "ok"
        run: .\build_gitbash.bat

      - name: Zipping 📦
        run: |
          cd build\bin\Release
          C:\msys64\usr\bin\zip.exe -r ..\..\..\gah_windows_git_bash.zip .

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: gah_windows_git_bash.zip
