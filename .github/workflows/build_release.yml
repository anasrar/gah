name: Build and Release
on:
  workflow_dispatch:
    inputs:
      release_title:
        description: "Release Title"
        required: true
        default: "test"
      release_tag:
        description: "Release Tag"
        required: true
        default: "test"
      release_draft:
        description: "Release Draft"
        type: boolean
        required: true
        default: true
      prerelease:
        description: "PreRelease"
        type: boolean
        required: true
        default: true

jobs:
  upload-release:
    name: Upload Release 🎁
    runs-on: ubuntu-latest
    needs: [test-windows]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download Zip File 📥
        uses: actions/download-artifact@v2
        with:
          name: uploads
          path: builds

      - name: Unzip Linux Binary and Windows Exe 📥
        run: |
          unzip -j builds/gah_linux.zip -d builds
          rm builds/gah_linux.zip
          unzip -j builds/gah_windows_git_bash.zip -d builds
          mv builds/gah.exe builds/gah_git_bash.exe
          unzip -j builds/gah_windows.zip -d builds

      - name: Create Release and Upload Assets 🎁
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: ${{ github.event.inputs.release_title }}
          draft: ${{ github.event.inputs.release_draft == 'true' }}
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
          automatic_release_tag: ${{ github.event.inputs.release_tag }}
          files: |
            builds/*

  build-linux:
    name: Build Linux 🖥
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download and Unzip SQLite 📥
        run: |
          wget -O sqlite.zip https://www.sqlite.org/2022/sqlite-amalgamation-3380000.zip
          unzip -j sqlite.zip -d sqlite3

      - name: Build 🛠
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:3.15.4
          options: -v ${{ github.workspace }}:/root/gah
          run: |
            cd /root/gah
            apk add patch make cmake gcc g++ libxcb libxcb-dev libxcb-static libxau libxau-dev libxdmcp libxdmcp-dev
            cd submodules/clip
            patch -p1 < ../../clip.patch
            cd ../../
            chmod u+x build.sh
            ./build.sh

      - name: Zipping 📦
        run: |
          cd build/bin
          zip ../../gah_linux.zip gah

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: |
            gah_linux.zip

  build-windows:
    name: Build Windows 🖥
    runs-on: windows-2019
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download and Unzip SQLite 📥
        run: |
          C:\msys64\usr\bin\wget.exe -O sqlite.zip https://www.sqlite.org/2022/sqlite-amalgamation-3380000.zip
          C:\msys64\usr\bin\unzip.exe -j sqlite.zip -d sqlite3

      - name: Add MSVC 🧰
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build 🛠
        run: .\build.bat

      - name: Zipping 📦
        run: |
          cd build\bin\Release
          C:\msys64\usr\bin\zip.exe -r ..\..\..\gah_windows.zip .

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: gah_windows.zip

      - name: Build For Git Bash 🛠
        run: .\build_gitbash.bat

      - name: Zipping 📦
        run: |
          cd build\bin\Release
          C:\msys64\usr\bin\zip.exe -r ..\..\..\gah_windows_git_bash.zip .

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: gah_windows_git_bash.zip

  test-linux:
    name: Test Linux 🕵
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Download Zip File 📥
        uses: actions/download-artifact@v2
        with:
          name: uploads
          path: builds

      - name: Unzip Linux Binary 📥
        run: |
          unzip -j builds/gah_linux.zip -d builds
          chmod u+x builds/gah

      - name: Test List 👷
        run: |
          ./builds/gah list

      - name: Test Add 👷
        run: |
          ./builds/gah add TEST_00 USER_LINUX ghp_TOKEN 2023-12-31 --password SECURE
          ./builds/gah add TEST_01 USER_LINUX ghp_TOKEN 2023-12-31 --password SECURE_PASSWORD
          ./builds/gah list

      - name: Test Clipboard 👷
        run: |
          ./builds/gah clipboard 1 --password SECURE --show
          ./builds/gah clipboard 2 --password SECURE_PASSWORD --show

      - name: Test Remove 👷
        run: |
          ./builds/gah remove 2
          ./builds/gah list

      - name: Zipping Database File 📦
        run: |
          zip -j database.zip ~/.gahdb

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: |
            database.zip

  test-windows:
    name: Test Windows 🕵
    runs-on: windows-2019
    needs: [test-linux]
    steps:
      - name: Download Database File 📥
        uses: actions/download-artifact@v2
        with:
          name: uploads
          path: builds

      - name: Unzip Database and Windows Exe 📥
        run: |
          C:\msys64\usr\bin\unzip.exe -j builds/database.zip -d $HOME
          C:\msys64\usr\bin\unzip.exe -j builds/gah_windows.zip
          Get-ChildItem $HOME

      - name: Test List 👷
        run: |
          .\gah.exe list

      - name: Test Add 👷
        run: |
          .\gah.exe add TEST_01 USER_WINDOWS ghp_TOKEN 2023-12-31 --password SECURE
          .\gah.exe add TEST_02 USER_WINDOWS ghp_TOKEN 2023-12-31 --password SECURE_PASSWORD
          .\gah.exe list

      - name: Test Clipboard 👷
        run: |
          .\gah.exe clipboard 1 --password SECURE --show
          .\gah.exe clipboard 2 --password SECURE --show

      - name: Test Remove 👷
        run: |
          .\gah.exe remove 3
          .\gah.exe list
